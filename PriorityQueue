import java.util.ArrayList;

public class WritePriorityQueue {

   
    public  static class PriorityQueue{
    	ArrayList<Integer> data;
    	public PriorityQueue() {
    		data=new ArrayList<>();
    	}
    	private void swap(int i,int j) {
    		int ith=data.get(i);
    		int jth=data.get(j);
    		data.set(i, jth);
    		data.set(j, ith);
    	}
    	private void upheapify(int i) {
    		if(i==0) {
    			return;
    		}
    		int pi=(i-1)/2;
    		if(data.get(i)<data.get(pi)) {
    			//swap
    			swap(i,pi);
    			upheapify(pi);
    		}
    	}
    	public  void add(int val) {
    		
    		data.add(val);//0(1)
    		upheapify(data.size()-1);//0(logn)
    	}
 
    	
    	private void downheapify(int pi) {
    		int mini=pi;
    		int li=2*pi+1;
    		if(li<data.size()&&data.get(li)<data.get(mini)) {
    			mini=li;
    		}
    		int ri=2*pi+2;
    		if(ri<data.size()&&data.get(ri)<data.get(mini)) {
    			mini=ri;
    		}
    		//li,ri,pi--min
    		if(mini!=pi) {
    			swap(pi,mini);
    			downheapify(mini);
    		}
    	}
        public  int remove() {
        	if(this.size()==0) {
    			System.out.println("underflow");
    			return -1;
    		}
        	swap(0,data.size()-1);
        	int val=data.remove(data.size()-1);
        	downheapify(0);
        	return val;
    	}
        public int peek() {
    		if(this.size()==0) {
    			System.out.println("underflow");
    			return -1;
    		}
    		return data.get(0);
    	}
       public  int size() {
    		return data.size();
    	}
    }
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		PriorityQueue pq=new PriorityQueue();
		pq.add(10);
		pq.add(30);
		pq.add(4);
		pq.add(16);

		System.out.println(pq.size());//4
		System.out.println(pq.remove());//4
		System.out.println(pq.peek());//10
		pq.add(35);
		pq.add(1);
		System.out.println(pq.peek());

	}

}
